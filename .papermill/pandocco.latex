% based on <https://github.com/jgm/pandoc-templates/blob/master/default.latex>
\documentclass[$if(fontsize)$$fontsize$,$endif$$if(lang)$$lang$,$endif$]{$documentclass$}
\usepackage[T1]{fontenc}
%\usepackage{lmodern}
\usepackage[lighttt]{lmodern}
\usepackage{amssymb,amsmath}
\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
% use microtype if available
\IfFileExists{microtype.sty}{\usepackage{microtype}}{}
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[utf8]{inputenc}
$if(euro)$
  \usepackage{eurosym}
$endif$
\else % if luatex or xelatex
  \usepackage{fontspec}
  \ifxetex
    \usepackage{xltxtra,xunicode}
  \fi
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  \newcommand{\euro}{â‚¬}
$if(mainfont)$
    \setmainfont{$mainfont$}
$endif$
$if(sansfont)$
    \setsansfont{$sansfont$}
$endif$
$if(monofont)$
    \setmonofont{$monofont$}
$endif$
$if(mathfont)$
    \setmathfont{$mathfont$}
$endif$
\fi
$if(geometry)$
\usepackage[$for(geometry)$$geometry$$sep$,$endfor$]{geometry}
$endif$
$if(natbib)$
\usepackage{natbib}
\bibliographystyle{plainnat}
$endif$
$if(biblatex)$
\usepackage{biblatex}
$if(biblio-files)$
\bibliography{$biblio-files$}
$endif$
$endif$

$if(listings)$
% better listing (code) style from <http://en.wikibooks.org/wiki/LaTeX/Packages/Listings>
\usepackage{listings}
\usepackage{xcolor}

\definecolor{lightgray}{gray}{.9}
\definecolor{mediumgray}{gray}{.6}
\definecolor{darkgray}{gray}{.4}

$if(colors)$
% color definitions (if colors are enabled)
\definecolor{CC_Keyword}{named}{blue}
\definecolor{CC_String}{named}{red}
\definecolor{CC_Comment}{rgb}{0.65, 0.12, 0.82}     % violet
$else$
% color definitions (if colors are NOT enabled)
\definecolor{CC_Keyword}{named}{black}
\definecolor{CC_String}{named}{darkgray}
\definecolor{CC_Comment}{named}{mediumgray}
$endif$

% costum js syntax higlighting based on <http://lenaherrmann.net/2010/05/20/javascript-syntax-highlighting-in-the-latex-listings-package>
\lstdefinelanguage{JavaScript}{
  keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break},
  morekeywords={Array, Boolean, Buffer, Date, Error, Function, Infinity, JSON, Math, NaN, Number, RegExp, Object, String},
  morekeywords={EvalError, RangeError, ReferenceError, RegExp, SyntaxError, TypeError, URIError, eval, isFinite, isNaN, parseFloat, parseInt, undefined, constructor, hasOwnProperty, isPrototypeOf, propertyIsEnumerable, toLocaleString, toString, valueOf},
  keywordstyle=\color{CC_Keyword}\bfseries,
  ndkeywords={class, export, boolean, throw, implements, import, this},
  ndkeywordstyle=\color{darkgray}\bfseries,
  identifierstyle=\color{black},
  sensitive=true,
  comment=[l]{// },
  morecomment=[s]{/*}{*/},
  commentstyle=\color{CC_Comment},
  stringstyle=\color{CC_String},
  morestring=[b]',
  morestring=[b]"
}
% alias "JavaScript" language definition to "js"
\lstalias{js}{JavaScript}

% needed for listings 'upquote' option
\usepackage{textcomp}

% needed for line break arrows
\usepackage{marvosym}

\lstset{                                    %
  language=JavaScript,                      % just a hack \o/
  frame=l,                                  % single frame on left side
  rulecolor=\color{mediumgray},              % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  basicstyle=\footnotesize\ttfamily,        % the size of the fonts that are used for the code
  %basicstyle=\ttfamily,        % the size of the fonts that are used for the code
  breaklines=true,                          % sets automatic line breaking
  breakatwhitespace=false,                  % sets if automatic breaks should only happen at whitespace
  numbers=none,                             % where to put the line-numbers; possible values are (none, left, right)
  tabsize=2,                                % sets default tabsize to 2 spaces
  showspaces=false,                         % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showstringspaces=false,                   % underline spaces within strings only
  showtabs=false,                           % show tabs within strings adding particular underscores
  extendedchars= \true,
  inputencoding= utf8,
  upquote=true,
  breaklines= true,
  breakindent= 0pt,
  breakatwhitespace= true,
  breakautoindent= true,
  prebreak={\space\Righttorque},            % pretty linebreak from <http://www.bollchen.de/blog/wp-content/uploads/2011/04/linebreak.pdf>
  postbreak={\space\Lefttorque\space}       % TODO: make mediumgray
}
$endif$
$if(lhs)$
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small\ttfamily}}{}
$endif$
$if(highlighting-macros)$
$highlighting-macros$
$endif$
$if(verbatim-in-note)$
\usepackage{fancyvrb}
$endif$
$if(fancy-enums)$
% Redefine labelwidth for lists; otherwise, the enumerate package will cause
% markers to extend beyond the left margin.
\makeatletter\AtBeginDocument{%
  \renewcommand{\@listi}
    {\setlength{\labelwidth}{4em}}
}\makeatother
\usepackage{enumerate}
$endif$
$if(tables)$
\usepackage{ctable}
\usepackage{float} % provides the H option for float placement
$endif$
$if(graphics)$
\usepackage{graphicx}
% We will generate all images so they have a width \maxwidth. This means
% that they will get their normal width if they fit onto the page, but
% are scaled down if they would overflow the margins.
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth
\else\Gin@nat@width\fi}
\makeatother
\let\Oldincludegraphics\includegraphics
\renewcommand{\includegraphics}[1]{\Oldincludegraphics[width=\maxwidth]{#1}}
$endif$
\ifxetex
  \usepackage[setpagesize=false, % page size defined by xetex
              unicode=false, % unicode breaks when used with xetex
              xetex]{hyperref}
\else
  \usepackage[unicode=true]{hyperref}
\fi
\hypersetup{breaklinks=true,
            bookmarks=true,
            pdfauthor={$author-meta$},
            pdftitle={$title-meta$},
            colorlinks=true,
            urlcolor=$if(colors)$$if(linkcolor)$$linkcolor$$else$blue$endif$$else$black$endif$,
            linkcolor=$if(colors)$$if(linkcolor)$$linkcolor$$else$magenta$endif$$else$black$endif$,
            pdfborder={0 0 0}}
$if(links-as-notes)$
% Make links footnotes instead of hotlinks:
\renewcommand{\href}[2]{#2\footnote{\url{#1}}}
$endif$
$if(strikeout)$
\usepackage[normalem]{ulem}
% avoid problems with \sout in headers with hyperref:
\pdfstringdefDisableCommands{\renewcommand{\sout}{}}
$endif$
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
\setlength{\emergencystretch}{3em}  % prevent overfull lines
$if(numbersections)$
$else$
\setcounter{secnumdepth}{0}
$endif$
$if(verbatim-in-note)$
\VerbatimFootnotes % allows verbatim text in footnotes
$endif$
$if(lang)$
\ifxetex
  \usepackage{polyglossia}
  \setmainlanguage{$mainlang$}
\else
  \usepackage[$lang$]{babel}
\fi
$endif$
$for(header-includes)$
$header-includes$
$endfor$

$if(title)$
\title{$title$}
$endif$
\author{$for(author)$$author$$sep$ \and $endfor$}
\date{$date$}

\begin{document}
$if(title)$
\maketitle
$endif$

$for(include-before)$
$include-before$

$endfor$
$if(toc)$
{
\hypersetup{linkcolor=black}
\tableofcontents
}
$endif$
$body$

$if(natbib)$
$if(biblio-files)$
$if(biblio-title)$
$if(book-class)$
\renewcommand\bibname{$biblio-title$}
$else$
\renewcommand\refname{$biblio-title$}
$endif$
$endif$
\bibliography{$biblio-files$}

$endif$
$endif$
$if(biblatex)$
\printbibliography$if(biblio-title)$[title=$biblio-title$]$endif$

$endif$
$for(include-after)$
$include-after$

$endfor$
\end{document}
